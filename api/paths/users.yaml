/users:
  get:
    operationId: getUsers
    summary: List users
    description: Get paginated list of users with optional filtering
    tags:
      - Users
    parameters:
      - name: page
        in: query
        description: Page number (1-based)
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
      - name: size
        in: query
        description: Page size
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
      - name: betriebId
        in: query
        description: Filter by company ID
        required: false
        schema:
          type: string
          format: uuid
      - name: role
        in: query
        description: Filter by role
        required: false
        schema:
          type: string
          enum: [ADMIN, USER]
    responses:
      '200':
        description: List of users
        content:
          application/json:
            schema:
              $ref: '../schemas/users.yaml#/UserListResponse'
      '401':
        description: Unauthorized

  post:
    operationId: createUser
    summary: Create new user
    description: Create a new user
    tags:
      - Users
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/users.yaml#/CreateUserRequest'
    responses:
      '201':
        description: User created successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/users.yaml#/UserResponse'
      '400':
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/ErrorResponse'
      '401':
        description: Unauthorized
      '403':
        description: Forbidden - insufficient permissions

/users/{id}:
  get:
    operationId: getUserById
    summary: Get user by ID
    description: Retrieve a specific user by their ID
    tags:
      - Users
    parameters:
      - name: id
        in: path
        required: true
        description: User ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: User details
        content:
          application/json:
            schema:
              $ref: '../schemas/users.yaml#/UserResponse'
      '404':
        description: User not found
      '401':
        description: Unauthorized

  put:
    operationId: updateUser
    summary: Update user
    description: Update an existing user
    tags:
      - Users
    parameters:
      - name: id
        in: path
        required: true
        description: User ID
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/users.yaml#/UpdateUserRequest'
    responses:
      '200':
        description: User updated successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/users.yaml#/UserResponse'
      '400':
        description: Invalid request data
      '401':
        description: Unauthorized
      '404':
        description: User not found

  delete:
    operationId: deleteUser
    summary: Delete user
    description: Delete a user by their ID
    tags:
      - Users
    parameters:
      - name: id
        in: path
        required: true
        description: User ID
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: User deleted successfully
      '401':
        description: Unauthorized
      '403':
        description: Forbidden - insufficient permissions
      '404':
        description: User not found

/users/profile:
  get:
    operationId: getCurrentUserProfile
    summary: Get current user profile
    description: Get the profile for the currently authenticated user
    tags:
      - Users
    responses:
      '200':
        description: User profile retrieved successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/users.yaml#/UserResponse'
      '401':
        description: Unauthorized

  put:
    operationId: updateCurrentUserProfile
    summary: Update current user profile
    description: Update the profile for the currently authenticated user
    tags:
      - Users
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/users.yaml#/UpdateUserProfileRequest'
    responses:
      '200':
        description: User profile updated successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/users.yaml#/UserResponse'
      '400':
        description: Invalid request data
      '401':
        description: Unauthorized

/users/change-password:
  post:
    operationId: changePassword
    summary: Change password
    description: Change password for the currently authenticated user
    tags:
      - Users
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/users.yaml#/ChangePasswordRequest'
    responses:
      '200':
        description: Password changed successfully
      '400':
        description: Invalid request data
      '401':
        description: Unauthorized 