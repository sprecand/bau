name: Documentation Quality Check

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'doc/**/*.md'
      - 'api/**/*.md'
      - 'README.md'
      - '.github/workflows/docs-check.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'doc/**/*.md' 
      - 'api/**/*.md'
      - 'README.md'
      - '.github/workflows/docs-check.yml'

jobs:
  docs-quality:
    name: Documentation Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Markdown Lint
      uses: DavidAnson/markdownlint-cli2-action@v20
      continue-on-error: true
      with:
        globs: |
          doc/**/*.md
          api/**/*.md
          README.md
        config: '.markdownlint.json'
    
    - name: Spell Check
      uses: streetsidesoftware/cspell-action@v6
      with:
        files: |
          doc/**/*.md
          api/**/*.md
          README.md
        inline: warning
        config: |
          {
            "version": "0.2",
            "language": "en,de-CH",
            "words": [
              "AWS", "PostgreSQL", "JWT", "TypeScript", "JavaScript", "OpenAPI", "Cognito",
              "DTO", "JSON", "HTTP", "HTTPS", "API", "REST", "CRUD", "SQL", "JPA", "JDK",
              "OpenTofu", "Terraform", "Docker", "Kubernetes", "GitHub", "CI", "CD", "DevOps",
              "SonarQube", "ESLint", "Spring", "SpringBoot", "Angular", "RxJS", "NgRx",
              "Tailwind", "CSS", "HTML", "SCSS", "YAML", "YML", "Markdown",
              "Betrieb", "Bauarbeiter", "Baustelle", "Handwerker", "adresse", "anzahl",
              "bedarfe", "bedarfs", "usecase", "postgres", "postgresql", "nginx", "awslogs",
              "jdbc", "amazoncognito", "csrf", "tfvars", "DATASOURCE", "WORKDIR", "BIGSERIAL",
              "VARCHAR", "INACTIV", "oklch", "Segoe", "Noto", "Menlo", "Consolas", "bezier",
              "sonarqube", "jacoco", "insertable"
            ],
            "ignoreRegExpList": [
              "/```[\\s\\S]*?```/g",
              "/`[^`]*`/g",
              "/https?:\\/\\/[^\\s)]+/g",
              "/[a-zA-Z0-9_\\-\\/\\.]+\\.(java|ts|js|html|css|yaml|yml|md|json|txt|sh|py)/g",
              "/\\d+\\.\\d+\\.\\d+/g",
              "/#[0-9a-fA-F]{3,6}/g"
            ]
          }
          
    - name: Check Links
      uses: lycheeverse/lychee-action@v2
      with:
        args: |
          --verbose
          --no-progress
          --exclude-all-private
          --exclude-loopback
          --exclude-mail
          --exclude='^file://'
          --exclude='localhost'
          --exclude='127.0.0.1'
          --exclude='github.com/.*/(issues|pull)/'
          'doc/**/*.md' 'api/**/*.md' 'README.md'
        fail: true
        
    - name: Documentation Coverage Report
      run: |
        echo "Documentation Quality Report" >> $GITHUB_STEP_SUMMARY
        echo "================================" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Count documentation files
        MD_COUNT=$(find doc api -name "*.md" | wc -l)
        echo "Markdown files: $MD_COUNT" >> $GITHUB_STEP_SUMMARY
        
        # Count code files that might need documentation
        JAVA_COUNT=$(find backend/src -name "*.java" 2>/dev/null | wc -l || echo "0")
        TS_COUNT=$(find frontend/src -name "*.ts" 2>/dev/null | wc -l || echo "0")
        echo "Java files: $JAVA_COUNT" >> $GITHUB_STEP_SUMMARY
        echo "TypeScript files: $TS_COUNT" >> $GITHUB_STEP_SUMMARY
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All documentation quality checks passed!" >> $GITHUB_STEP_SUMMARY 